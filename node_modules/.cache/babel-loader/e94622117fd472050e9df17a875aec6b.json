{"ast":null,"code":"var _jsxFileName = \"/home/pravinnatsu/Documents/Happy-Visit/happy-visit/src/contexts/AuthContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport { auth } from '../firebase'; // import { GoogleAuthProvider } from 'firebase/auth';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\nexport function useAuth() {\n  _s();\n\n  return useContext(AuthContext);\n}\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function AuthProvider(_ref) {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n\n  function signup(email, password) {\n    return auth.createUserWithEmailAndPassword(email, password);\n  }\n\n  function login(email, password) {\n    return auth.signInWithEmailAndPassword(email, password);\n  }\n\n  function logout() {\n    return auth.signOut();\n  }\n\n  function resetPassword(email) {\n    return auth.sendPasswordResetEmail(email);\n  } // function googleSignIn() {\n  //     const googleAuthProvider = new GoogleAuthProvider();\n  //     return signInWithPopup(auth, googleAuthProvider);\n  // }\n\n\n  useEffect(() => {\n    const unsuscribe = auth.onAuthStateChanged(user => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n    return unsuscribe;\n  }, []);\n  const value = {\n    currentUser,\n    login,\n    signup,\n    logout,\n    resetPassword\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(AuthProvider, \"1cdeWWSmbSz3cOWqWLAt+Ta4DMY=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/home/pravinnatsu/Documents/Happy-Visit/happy-visit/src/contexts/AuthContext.js"],"names":["React","useContext","useState","useEffect","auth","AuthContext","createContext","useAuth","AuthProvider","children","currentUser","setCurrentUser","loading","setLoading","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","unsuscribe","onAuthStateChanged","user","value"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,IAAT,QAAqB,aAArB,C,CACA;;;AAGA,MAAMC,WAAW,gBAAGL,KAAK,CAACM,aAAN,EAApB;AAEA,OAAO,SAASC,OAAT,GAAmB;AAAA;;AACtB,SAAON,UAAU,CAACI,WAAD,CAAjB;AACH;;GAFeE,O;;AAIhB,OAAO,SAASC,YAAT,OAAoC;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACvC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,EAA9C;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,IAAD,CAAtC;;AAEA,WAASY,MAAT,CAAgBC,KAAhB,EAAuBC,QAAvB,EAAiC;AAC7B,WAAOZ,IAAI,CAACa,8BAAL,CAAoCF,KAApC,EAA2CC,QAA3C,CAAP;AACH;;AAED,WAASE,KAAT,CAAeH,KAAf,EAAsBC,QAAtB,EAAgC;AAC5B,WAAOZ,IAAI,CAACe,0BAAL,CAAgCJ,KAAhC,EAAuCC,QAAvC,CAAP;AACH;;AAED,WAASI,MAAT,GAAkB;AACd,WAAOhB,IAAI,CAACiB,OAAL,EAAP;AACH;;AAED,WAASC,aAAT,CAAuBP,KAAvB,EAA8B;AAC1B,WAAOX,IAAI,CAACmB,sBAAL,CAA4BR,KAA5B,CAAP;AACH,GAlBsC,CAoBvC;AACA;AACA;AACA;;;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMqB,UAAU,GAAGpB,IAAI,CAACqB,kBAAL,CAAwBC,IAAI,IAAI;AAC/Cf,MAAAA,cAAc,CAACe,IAAD,CAAd;AACAb,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAHkB,CAAnB;AAIA,WAAOW,UAAP;AACH,GANQ,EAMN,EANM,CAAT;AAQA,QAAMG,KAAK,GAAG;AACVjB,IAAAA,WADU;AAEVQ,IAAAA,KAFU;AAGVJ,IAAAA,MAHU;AAIVM,IAAAA,MAJU;AAKVE,IAAAA;AALU,GAAd;AAOJ,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEK,KAA7B;AAAA,cACK,CAACf,OAAD,IAAYH;AADjB;AAAA;AAAA;AAAA;AAAA,UADJ;AAKC;;IA7CeD,Y;;KAAAA,Y","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport { auth } from '../firebase';\n// import { GoogleAuthProvider } from 'firebase/auth';\n\n\nconst AuthContext = React.createContext()\n\nexport function useAuth() {\n    return useContext(AuthContext)\n}\n\nexport function AuthProvider({ children }) {\n    const [currentUser, setCurrentUser] = useState()\n    const [loading, setLoading] = useState(true)\n\n    function signup(email, password) {\n        return auth.createUserWithEmailAndPassword(email, password)\n    }\n\n    function login(email, password) {\n        return auth.signInWithEmailAndPassword(email, password)\n    }\n\n    function logout() {\n        return auth.signOut()\n    }\n\n    function resetPassword(email) {\n        return auth.sendPasswordResetEmail(email)\n    }\n\n    // function googleSignIn() {\n    //     const googleAuthProvider = new GoogleAuthProvider();\n    //     return signInWithPopup(auth, googleAuthProvider);\n    // }\n\n    useEffect(() => {\n        const unsuscribe = auth.onAuthStateChanged(user => {\n            setCurrentUser(user)\n            setLoading(false)\n        })\n        return unsuscribe\n    }, [])\n\n    const value = {\n        currentUser,\n        login,\n        signup,\n        logout,\n        resetPassword\n}\nreturn (\n    <AuthContext.Provider value={value}>\n        {!loading && children}\n    </AuthContext.Provider>\n)\n}"]},"metadata":{},"sourceType":"module"}